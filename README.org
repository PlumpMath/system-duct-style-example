* Multiple endpoints example with system
** Definition
This is an example for the [[https://github.com/danielsz/system][system]] library. It shows how to leverage the Duct components to build an application with multiple endpoints. 
** Mission statement
Names are important. What names? Those behind our favorite movies and our favorite books, that's who! So let’s save them via a web service.
** Installation

In our development environment, we use a in-memory database and a web server listening on port 3025. 

#+BEGIN_SRC sh
$ boot dev
#+END_SRC

Or, if you don't intend to connect with a REPL to the running system, type simply:

#+BEGIN_SRC sh
$ boot dev-run
#+END_SRC

In our production environment, we use a persistent database and a web server listening on port 8008.

#+BEGIN_SRC sh
$ boot prod-run
#+END_SRC


** Usage

To add a director to our database: 
#+BEGIN_SRC sh :results silent
curl -H "Content-Type: application/edn" -X PUT -d '{:director "Nagisa Ōshima"}' http://localhost:3025/director
#+END_SRC

To list directors in our database: 
#+BEGIN_SRC sh :results output replace :exports both
curl http://localhost:3025/directors
#+END_SRC

#+RESULTS:
: ("Nagisa Ōshima")

To add an author to our database: 
#+BEGIN_SRC sh :results silent
curl -H "Content-Type: application/edn" -X PUT -d '{:author "Albert Camus"}' http://localhost:3025/author
#+END_SRC

To list authors in our database: 
#+BEGIN_SRC sh :results output replace :exports both
curl http://localhost:3025/authors
#+END_SRC

#+RESULTS:
: ("Alber Camus")

Lather, rinse and repeat. 

